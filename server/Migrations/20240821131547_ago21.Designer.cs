// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240821131547_ago21")]
    partial class ago21
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Cartilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Antibioticos")
                        .HasColumnType("text");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaTomaMuestras")
                        .HasColumnType("date");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<int>("NumeroMuestra")
                        .HasColumnType("integer");

                    b.Property<bool?>("Transfucion")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Cartilla");
                });

            modelBuilder.Entity("server.Models.Centro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeguimientoCasos")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("Centro");
                });

            modelBuilder.Entity("server.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("server.Models.CompraOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodOrden")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EstadoCompra")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("FechaConfirmacion")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaEntregaPlani")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaLimitePedido")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsrComprador")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int>("MontoImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("MontoSinImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("MontoTotal")
                        .HasColumnType("integer");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Prioridad")
                        .HasColumnType("integer");

                    b.Property<string>("RefProveedor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdMoneda");

                    b.HasIndex("IdProveedor");

                    b.ToTable("CompraOrden");
                });

            modelBuilder.Entity("server.Models.CompraOrdenDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadPaquete")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadRecibida")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadSolicitada")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaEsperada")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdCompraOrden")
                        .HasColumnType("integer");

                    b.Property<int>("IdEmpaquetado")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUnidadMedida")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrecioImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioSubtotal")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioTotal")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioUnitario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCompraOrden");

                    b.HasIndex("IdMoneda");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("CompraOrdenDetalle");
                });

            modelBuilder.Entity("server.Models.ContableBanco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCuenta")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ContableBanco");
                });

            modelBuilder.Entity("server.Models.Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Telefono")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Laboratorio");
                });

            modelBuilder.Entity("server.Models.Madre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DetalleDireccion")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Enfermedad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoEmergencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tratamiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("TratamientoHipertiroidismo")
                        .HasColumnType("boolean");

                    b.Property<bool>("TratamientoHiportiroidismo")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Madre");
                });

            modelBuilder.Entity("server.Models.ManejoCartilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadEntrega")
                        .HasColumnType("integer");

                    b.Property<int?>("CantidadRecivida")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTarjetaFinal")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTarjetaInicio")
                        .HasColumnType("integer");

                    b.Property<string>("EntregadoPor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCentro")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("RecibidoPor")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<string>("TipoManejo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCentro");

                    b.ToTable("ManejoCartilla");
                });

            modelBuilder.Entity("server.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("server.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EdadGestacionalDia")
                        .HasColumnType("integer");

                    b.Property<int>("EdadGestacionalSemana")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<int>("IdMadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<bool>("NacimientoTermino")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PesoNacimiento")
                        .HasColumnType("double precision");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdMadre");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("server.Models.ProdAtributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("ModoCreacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.Property<string>("TipoVisualizacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProdAtributo");
                });

            modelBuilder.Entity("server.Models.ProdAtributoValor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<string>("ColorHtml")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdAtributo")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Personalizable")
                        .HasColumnType("boolean");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdAtributo");

                    b.ToTable("ProdAtributoValor");
                });

            modelBuilder.Entity("server.Models.ProdBaseAtribValorRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdAtribValor")
                        .HasColumnType("integer");

                    b.Property<int>("IdProdBase")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioExtra")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdAtribValor");

                    b.HasIndex("IdProdBase");

                    b.ToTable("ProdBaseAtribValorRel");
                });

            modelBuilder.Entity("server.Models.ProdCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdEstrategiaEliminacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("MetodoEmbalaje")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathPadre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ProdCategoria");
                });

            modelBuilder.Entity("server.Models.ProdProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodBarras")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodFabricante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodInterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProdBase")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("PathImagen")
                        .HasColumnType("text");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.Property<int?>("ProdBaseAtribValorRelId")
                        .HasColumnType("integer");

                    b.Property<int>("Volumen")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdProdBase");

                    b.HasIndex("ProdBaseAtribValorRelId");

                    b.ToTable("ProdProducto");
                });

            modelBuilder.Entity("server.Models.ProdProductoAtribValorRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProdBaseAtriValorRel")
                        .HasColumnType("integer");

                    b.Property<int>("IdProdProducto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdProdBaseAtriValorRel");

                    b.HasIndex("IdProdProducto");

                    b.ToTable("ProdProductoAtribValorRel");
                });

            modelBuilder.Entity("server.Models.ProdProductoBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodBarras")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodFabricante")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodInterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<bool>("Comprable")
                        .HasColumnType("boolean");

                    b.Property<bool>("Configurable")
                        .HasColumnType("boolean");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescripcionCompra")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescripcionVenta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("integer");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int>("IdTipoProducto")
                        .HasColumnType("integer");

                    b.Property<int>("IdUnidadMedCompra")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUnidadMedida")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Peso")
                        .HasColumnType("integer");

                    b.Property<string>("PlazoEntregaCli")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrecioCosto")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioVenta")
                        .HasColumnType("integer");

                    b.Property<string>("Prioridad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.Property<string>("TipoServEnt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Trazabilidad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Vendible")
                        .HasColumnType("boolean");

                    b.Property<int>("Volumen")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdUnidadMedida");

                    b.ToTable("ProdProductoBase");
                });

            modelBuilder.Entity("server.Models.ProdTarifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PoliticaDescuento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdMoneda");

                    b.ToTable("ProdTarifa");
                });

            modelBuilder.Entity("server.Models.ProdTarifaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AplicadoEn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CantidadMin")
                        .HasColumnType("integer");

                    b.Property<int>("Descuento")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdProductoBase")
                        .HasColumnType("integer");

                    b.Property<int?>("IdProductoCategoria")
                        .HasColumnType("integer");

                    b.Property<int?>("IdTarifa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("PrecioComputable")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrecioFijo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdMoneda");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdProductoBase");

                    b.HasIndex("IdProductoCategoria");

                    b.HasIndex("IdTarifa");

                    b.ToTable("ProdTarifaDetalle");
                });

            modelBuilder.Entity("server.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCiudad");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("server.Models.PvCaja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EfectivoId")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdEfectivo")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int?>("RecMonedaId")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("EfectivoId");

                    b.HasIndex("RecMonedaId");

                    b.ToTable("PvCaja");
                });

            modelBuilder.Entity("server.Models.PvConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int>("IdTipoTerminal")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int>("LimiteContactos")
                        .HasColumnType("integer");

                    b.Property<int>("LimiteProducto")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("PvConfig");
                });

            modelBuilder.Entity("server.Models.PvEfectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<double>("Valor")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("IdMoneda");

                    b.ToTable("PvEfectivo");
                });

            modelBuilder.Entity("server.Models.RecBanco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecBanco");
                });

            modelBuilder.Entity("server.Models.RecContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EsEmpresa")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("integer");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int>("IdPais")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("IdentFiscal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Latitud")
                        .HasColumnType("integer");

                    b.Property<int>("Longitud")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreDespliegue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Numeracion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Profesion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PuestoTrabajo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SitioWeb")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoFijo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoMovil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoContacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("RecContacto");
                });

            modelBuilder.Entity("server.Models.RecContactoBanco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdBanco")
                        .HasColumnType("integer");

                    b.Property<int?>("IdContacto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("NumeroCuenta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdContacto");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdMoneda");

                    b.ToTable("RecContactoBanco");
                });

            modelBuilder.Entity("server.Models.RecContactoCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathPadre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecContactoCategoria");
                });

            modelBuilder.Entity("server.Models.RecContactoCategoriaRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCategContacto")
                        .HasColumnType("integer");

                    b.Property<int>("IdContacto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCategContacto");

                    b.HasIndex("IdContacto");

                    b.ToTable("RecContactoCategoriaRel");
                });

            modelBuilder.Entity("server.Models.RecEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CabeceraInforme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CodigoQR")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ColorBackground")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ColorPrimario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ColorSecundario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmpresaDetalles")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FuenteLetra")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("IdContacto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int>("IdNomenclatura")
                        .HasColumnType("integer");

                    b.Property<int>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathLogo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PieInforme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.Property<string>("TelefonoFijo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoMovil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdContacto");

                    b.HasIndex("IdMoneda");

                    b.ToTable("RecEmpresa");
                });

            modelBuilder.Entity("server.Models.RecGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecGrupo");
                });

            modelBuilder.Entity("server.Models.RecMoneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Decimales")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Redondeo")
                        .HasColumnType("integer");

                    b.Property<string>("Simbolo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubUnidadMonetaria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UnidadMonetaria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecMoneda");
                });

            modelBuilder.Entity("server.Models.RecTipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RecTipoUsuario");
                });

            modelBuilder.Entity("server.Models.RecUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("CodigoBot")
                        .HasColumnType("text");

                    b.Property<string>("CodigoSecreto")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadoBot")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Firma")
                        .HasColumnType("text");

                    b.Property<int>("IdAccion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdContacto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdTipoUsuario")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notificacion")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdContacto");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("RecUsuario");
                });

            modelBuilder.Entity("server.Models.RecUsuarioGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RecUsuarioGrupo");
                });

            modelBuilder.Entity("server.Models.Red", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Red");
                });

            modelBuilder.Entity("server.Models.Resultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaEntregado")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaResultado")
                        .HasColumnType("date");

                    b.Property<int>("IdCartilla")
                        .HasColumnType("integer");

                    b.Property<int>("IdLaboratorio")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<string>("ResultadoPaciente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorReferencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorResultado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCartilla");

                    b.HasIndex("IdLaboratorio");

                    b.ToTable("Resultado");
                });

            modelBuilder.Entity("server.Models.RiAccesoModelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Crear")
                        .HasColumnType("boolean");

                    b.Property<bool>("Editar")
                        .HasColumnType("boolean");

                    b.Property<bool>("Eliminar")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("integer");

                    b.Property<int>("IdModelo")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<bool>("Ver")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdModelo");

                    b.ToTable("RiAccesoModelo");
                });

            modelBuilder.Entity("server.Models.RiCategoriaModulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Exclusivo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("RiCategoriaModulo");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathIcono")
                        .HasColumnType("text");

                    b.Property<string>("PathPadre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdPadre");

                    b.ToTable("RiMenu");
                });

            modelBuilder.Entity("server.Models.RiMenuGrupoRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("integer");

                    b.Property<int>("IdMenu")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdMenu");

                    b.ToTable("RiMenuGrupoRel");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdMenu")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Secuencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdMenu");

                    b.ToTable("RiModelo");
                });

            modelBuilder.Entity("server.Models.UmCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Agrupable")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UmCategoria");
                });

            modelBuilder.Entity("server.Models.UmUnidadMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Ratio")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Redondeo")
                        .HasColumnType("numeric");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("UmUnidadMedida");
                });

            modelBuilder.Entity("server.Models.VentaOrden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoOrden")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadoFacturacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadoOrden")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaValidez")
                        .HasColumnType("date");

                    b.Property<int>("IdAlmacen")
                        .HasColumnType("integer");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int>("IdEquipo")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int>("IdPrecio")
                        .HasColumnType("integer");

                    b.Property<int>("IdTerminosPago")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdVendedor")
                        .HasColumnType("integer");

                    b.Property<int>("MontoImpago")
                        .HasColumnType("integer");

                    b.Property<int>("MontoImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("MontoSinImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("MontoTotal")
                        .HasColumnType("integer");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Tc")
                        .HasColumnType("integer");

                    b.Property<string>("Toker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdMoneda");

                    b.ToTable("VentaOrden");
                });

            modelBuilder.Entity("server.Models.VentaOrdenDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<int>("CantidadEnviada")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoInterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Descuento")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadoFacturacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadoOrden")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdEmpaquetado")
                        .HasColumnType("integer");

                    b.Property<int?>("IdMoneda")
                        .HasColumnType("integer");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUnidadMedida")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdVentaOrden")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PrecioImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioReducido")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioUnitConImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioUnitSinImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("PrecioUnitario")
                        .HasColumnType("integer");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.Property<int>("SubtotalConImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("SubtotalSinImpuesto")
                        .HasColumnType("integer");

                    b.Property<int>("TiempoEspera")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdMoneda");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUnidadMedida");

                    b.HasIndex("IdVentaOrden");

                    b.ToTable("VentaOrdenDetalle");
                });

            modelBuilder.Entity("server.Models.Cartilla", b =>
                {
                    b.HasOne("server.Models.Paciente", "Paciente")
                        .WithMany("Cartilla")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("server.Models.Centro", b =>
                {
                    b.HasOne("server.Models.Municipio", "Municipio")
                        .WithMany("Centro")
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("server.Models.CompraOrden", b =>
                {
                    b.HasOne("server.Models.RecEmpresa", "Empresa")
                        .WithMany("CompraOrden")
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("server.Models.RecMoneda", "Moneda")
                        .WithMany("CompraOrden")
                        .HasForeignKey("IdMoneda");

                    b.HasOne("server.Models.RecContacto", "Proveedor")
                        .WithMany("CompraOrden")
                        .HasForeignKey("IdProveedor");

                    b.Navigation("Empresa");

                    b.Navigation("Moneda");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("server.Models.CompraOrdenDetalle", b =>
                {
                    b.HasOne("server.Models.CompraOrden", "CompraOrden")
                        .WithMany("CompraOrdenDetalle")
                        .HasForeignKey("IdCompraOrden");

                    b.HasOne("server.Models.RecMoneda", "Moneda")
                        .WithMany("CompraOrdenDetalle")
                        .HasForeignKey("IdMoneda");

                    b.HasOne("server.Models.ProdProducto", "ProdProducto")
                        .WithMany("CompraOrdenDetalle")
                        .HasForeignKey("IdProducto");

                    b.HasOne("server.Models.UmUnidadMedida", "UnidadMedida")
                        .WithMany("CompraOrdenDetalle")
                        .HasForeignKey("IdUnidadMedida");

                    b.Navigation("CompraOrden");

                    b.Navigation("Moneda");

                    b.Navigation("ProdProducto");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("server.Models.Laboratorio", b =>
                {
                    b.HasOne("server.Models.Provincia", "Provincia")
                        .WithMany("Laboratorio")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("server.Models.Madre", b =>
                {
                    b.HasOne("server.Models.Provincia", "Provincia")
                        .WithMany("Madre")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("server.Models.ManejoCartilla", b =>
                {
                    b.HasOne("server.Models.Centro", "Centro")
                        .WithMany("ManejoCartilla")
                        .HasForeignKey("IdCentro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centro");
                });

            modelBuilder.Entity("server.Models.Municipio", b =>
                {
                    b.HasOne("server.Models.Provincia", "Provincia")
                        .WithMany("Municipio")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("server.Models.Paciente", b =>
                {
                    b.HasOne("server.Models.Madre", "Madre")
                        .WithMany("Paciente")
                        .HasForeignKey("IdMadre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Madre");
                });

            modelBuilder.Entity("server.Models.ProdAtributoValor", b =>
                {
                    b.HasOne("server.Models.ProdAtributo", "Atributo")
                        .WithMany("ProdAtributoValor")
                        .HasForeignKey("IdAtributo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atributo");
                });

            modelBuilder.Entity("server.Models.ProdBaseAtribValorRel", b =>
                {
                    b.HasOne("server.Models.ProdAtributoValor", "AtributoValor")
                        .WithMany("ProdBaseAtribValorRel")
                        .HasForeignKey("IdAtribValor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.ProdProductoBase", "ProductoBase")
                        .WithMany("ProdBaseAtributoValorRel")
                        .HasForeignKey("IdProdBase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtributoValor");

                    b.Navigation("ProductoBase");
                });

            modelBuilder.Entity("server.Models.ProdProducto", b =>
                {
                    b.HasOne("server.Models.ProdProductoBase", "ProdProductoBase")
                        .WithMany("ProdProducto")
                        .HasForeignKey("IdProdBase")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.ProdBaseAtribValorRel", null)
                        .WithMany("ProdProducto")
                        .HasForeignKey("ProdBaseAtribValorRelId");

                    b.Navigation("ProdProductoBase");
                });

            modelBuilder.Entity("server.Models.ProdProductoAtribValorRel", b =>
                {
                    b.HasOne("server.Models.ProdBaseAtribValorRel", "ProdBaseAtribValorRel")
                        .WithMany("ProdProductoAtribValorRel")
                        .HasForeignKey("IdProdBaseAtriValorRel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.ProdProducto", "ProdProducto")
                        .WithMany("ProdProductoAtribValorRel")
                        .HasForeignKey("IdProdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProdBaseAtribValorRel");

                    b.Navigation("ProdProducto");
                });

            modelBuilder.Entity("server.Models.ProdProductoBase", b =>
                {
                    b.HasOne("server.Models.ProdCategoria", "Categoria")
                        .WithMany("ProdProductoBase")
                        .HasForeignKey("IdCategoria");

                    b.HasOne("server.Models.RecEmpresa", "Empresa")
                        .WithMany("ProdProductoBase")
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("server.Models.UmUnidadMedida", "UnidadMedica")
                        .WithMany("ProdProductoBase")
                        .HasForeignKey("IdUnidadMedida");

                    b.Navigation("Categoria");

                    b.Navigation("Empresa");

                    b.Navigation("UnidadMedica");
                });

            modelBuilder.Entity("server.Models.ProdTarifa", b =>
                {
                    b.HasOne("server.Models.RecEmpresa", "Empresa")
                        .WithMany("ProdTarifa")
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("server.Models.RecMoneda", "RecMoneda")
                        .WithMany("ProdTarifa")
                        .HasForeignKey("IdMoneda");

                    b.Navigation("Empresa");

                    b.Navigation("RecMoneda");
                });

            modelBuilder.Entity("server.Models.ProdTarifaDetalle", b =>
                {
                    b.HasOne("server.Models.RecMoneda", "RecMoneda")
                        .WithMany("ProdTarifaDetalle")
                        .HasForeignKey("IdMoneda");

                    b.HasOne("server.Models.ProdProducto", "ProdProducto")
                        .WithMany("ProdTarifaDetalle")
                        .HasForeignKey("IdProducto");

                    b.HasOne("server.Models.ProdProductoBase", "ProdProductoBase")
                        .WithMany("ProdTarifaDetalle")
                        .HasForeignKey("IdProductoBase");

                    b.HasOne("server.Models.ProdCategoria", "ProdCategoria")
                        .WithMany("ProdTarifaDetalle")
                        .HasForeignKey("IdProductoCategoria");

                    b.HasOne("server.Models.ProdTarifa", "ProdTarifa")
                        .WithMany("ProdTarifaDetalle")
                        .HasForeignKey("IdTarifa");

                    b.Navigation("ProdCategoria");

                    b.Navigation("ProdProducto");

                    b.Navigation("ProdProductoBase");

                    b.Navigation("ProdTarifa");

                    b.Navigation("RecMoneda");
                });

            modelBuilder.Entity("server.Models.Provincia", b =>
                {
                    b.HasOne("server.Models.Ciudad", "Ciudad")
                        .WithMany("Provincia")
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("server.Models.PvCaja", b =>
                {
                    b.HasOne("server.Models.PvEfectivo", "Efectivo")
                        .WithMany("PvCaja")
                        .HasForeignKey("EfectivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RecMoneda", null)
                        .WithMany("PvCaja")
                        .HasForeignKey("RecMonedaId");

                    b.Navigation("Efectivo");
                });

            modelBuilder.Entity("server.Models.PvConfig", b =>
                {
                    b.HasOne("server.Models.RecEmpresa", "RecEmpresa")
                        .WithMany("PvConfig")
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("RecEmpresa");
                });

            modelBuilder.Entity("server.Models.PvEfectivo", b =>
                {
                    b.HasOne("server.Models.RecMoneda", "Moneda")
                        .WithMany("PvEfectivo")
                        .HasForeignKey("IdMoneda");

                    b.Navigation("Moneda");
                });

            modelBuilder.Entity("server.Models.RecContacto", b =>
                {
                    b.HasOne("server.Models.RecEmpresa", "Empresa")
                        .WithMany("RecContacto")
                        .HasForeignKey("IdEmpresa");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("server.Models.RecContactoBanco", b =>
                {
                    b.HasOne("server.Models.RecBanco", "Banco")
                        .WithMany("RecContactoBanco")
                        .HasForeignKey("IdBanco");

                    b.HasOne("server.Models.RecContacto", "Contacto")
                        .WithMany("ContactoBancoRel")
                        .HasForeignKey("IdContacto");

                    b.HasOne("server.Models.RecEmpresa", "Empresa")
                        .WithMany("RecContactoBanco")
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("server.Models.RecMoneda", "Moneda")
                        .WithMany("RecContactoBanco")
                        .HasForeignKey("IdMoneda");

                    b.Navigation("Banco");

                    b.Navigation("Contacto");

                    b.Navigation("Empresa");

                    b.Navigation("Moneda");
                });

            modelBuilder.Entity("server.Models.RecContactoCategoriaRel", b =>
                {
                    b.HasOne("server.Models.RecContactoCategoria", "ContactoCategoria")
                        .WithMany("ContactoCategoriaRel")
                        .HasForeignKey("IdCategContacto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RecContacto", "Contacto")
                        .WithMany("ContactoCategoriaRel")
                        .HasForeignKey("IdContacto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacto");

                    b.Navigation("ContactoCategoria");
                });

            modelBuilder.Entity("server.Models.RecEmpresa", b =>
                {
                    b.HasOne("server.Models.RecContacto", "Contacto")
                        .WithMany("RecEmpresa")
                        .HasForeignKey("IdContacto");

                    b.HasOne("server.Models.RecMoneda", "Moneda")
                        .WithMany("RecEmpresa")
                        .HasForeignKey("IdMoneda");

                    b.Navigation("Contacto");

                    b.Navigation("Moneda");
                });

            modelBuilder.Entity("server.Models.RecUsuario", b =>
                {
                    b.HasOne("server.Models.RecContacto", "Contacto")
                        .WithMany("RecUsuario")
                        .HasForeignKey("IdContacto");

                    b.HasOne("server.Models.RecTipoUsuario", "TipoUsuario")
                        .WithMany("RecUsuario")
                        .HasForeignKey("IdTipoUsuario");

                    b.Navigation("Contacto");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("server.Models.RecUsuarioGrupo", b =>
                {
                    b.HasOne("server.Models.RecGrupo", "Grupo")
                        .WithMany("RecUsuarioGrupo")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RecUsuario", "Usuario")
                        .WithMany("RecUsuarioGrupo")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("server.Models.Resultado", b =>
                {
                    b.HasOne("server.Models.Cartilla", "Cartilla")
                        .WithMany("Resultado")
                        .HasForeignKey("IdCartilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Laboratorio", "Laboratorio")
                        .WithMany("Resultado")
                        .HasForeignKey("IdLaboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartilla");

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("server.Models.RiAccesoModelo", b =>
                {
                    b.HasOne("server.Models.RecGrupo", "Grupo")
                        .WithMany("RiAccesoModelo")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RiModelo", "Modelo")
                        .WithMany("RiAccesoModelo")
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.HasOne("server.Models.RiMenu", "Padre")
                        .WithMany()
                        .HasForeignKey("IdPadre");

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("server.Models.RiMenuGrupoRel", b =>
                {
                    b.HasOne("server.Models.RecGrupo", "Grupo")
                        .WithMany("RiMenuGrupoRel")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RiMenu", "Menu")
                        .WithMany("RiMenuGrupoRel")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.HasOne("server.Models.RiMenu", "Menu")
                        .WithMany("RiModelo")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("server.Models.UmUnidadMedida", b =>
                {
                    b.HasOne("server.Models.UmCategoria", "Categoria")
                        .WithMany("UmUnidadMedida")
                        .HasForeignKey("IdCategoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("server.Models.VentaOrden", b =>
                {
                    b.HasOne("server.Models.RecEmpresa", "Empresa")
                        .WithMany("VentaOrden")
                        .HasForeignKey("IdEmpresa");

                    b.HasOne("server.Models.RecMoneda", "Moneda")
                        .WithMany("VentaOrden")
                        .HasForeignKey("IdMoneda");

                    b.Navigation("Empresa");

                    b.Navigation("Moneda");
                });

            modelBuilder.Entity("server.Models.VentaOrdenDetalle", b =>
                {
                    b.HasOne("server.Models.RecMoneda", "Moneda")
                        .WithMany("VentaOrdenDetalle")
                        .HasForeignKey("IdMoneda");

                    b.HasOne("server.Models.ProdProducto", "Producto")
                        .WithMany("VentaOrdenDetalle")
                        .HasForeignKey("IdProducto");

                    b.HasOne("server.Models.UmUnidadMedida", "UnidadMedida")
                        .WithMany("VentaOrdenDetalle")
                        .HasForeignKey("IdUnidadMedida");

                    b.HasOne("server.Models.VentaOrden", "VentaOrden")
                        .WithMany("VentaOrdenDetalle")
                        .HasForeignKey("IdVentaOrden");

                    b.Navigation("Moneda");

                    b.Navigation("Producto");

                    b.Navigation("UnidadMedida");

                    b.Navigation("VentaOrden");
                });

            modelBuilder.Entity("server.Models.Cartilla", b =>
                {
                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("server.Models.Centro", b =>
                {
                    b.Navigation("ManejoCartilla");
                });

            modelBuilder.Entity("server.Models.Ciudad", b =>
                {
                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("server.Models.CompraOrden", b =>
                {
                    b.Navigation("CompraOrdenDetalle");
                });

            modelBuilder.Entity("server.Models.Laboratorio", b =>
                {
                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("server.Models.Madre", b =>
                {
                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("server.Models.Municipio", b =>
                {
                    b.Navigation("Centro");
                });

            modelBuilder.Entity("server.Models.Paciente", b =>
                {
                    b.Navigation("Cartilla");
                });

            modelBuilder.Entity("server.Models.ProdAtributo", b =>
                {
                    b.Navigation("ProdAtributoValor");
                });

            modelBuilder.Entity("server.Models.ProdAtributoValor", b =>
                {
                    b.Navigation("ProdBaseAtribValorRel");
                });

            modelBuilder.Entity("server.Models.ProdBaseAtribValorRel", b =>
                {
                    b.Navigation("ProdProducto");

                    b.Navigation("ProdProductoAtribValorRel");
                });

            modelBuilder.Entity("server.Models.ProdCategoria", b =>
                {
                    b.Navigation("ProdProductoBase");

                    b.Navigation("ProdTarifaDetalle");
                });

            modelBuilder.Entity("server.Models.ProdProducto", b =>
                {
                    b.Navigation("CompraOrdenDetalle");

                    b.Navigation("ProdProductoAtribValorRel");

                    b.Navigation("ProdTarifaDetalle");

                    b.Navigation("VentaOrdenDetalle");
                });

            modelBuilder.Entity("server.Models.ProdProductoBase", b =>
                {
                    b.Navigation("ProdBaseAtributoValorRel");

                    b.Navigation("ProdProducto");

                    b.Navigation("ProdTarifaDetalle");
                });

            modelBuilder.Entity("server.Models.ProdTarifa", b =>
                {
                    b.Navigation("ProdTarifaDetalle");
                });

            modelBuilder.Entity("server.Models.Provincia", b =>
                {
                    b.Navigation("Laboratorio");

                    b.Navigation("Madre");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("server.Models.PvEfectivo", b =>
                {
                    b.Navigation("PvCaja");
                });

            modelBuilder.Entity("server.Models.RecBanco", b =>
                {
                    b.Navigation("RecContactoBanco");
                });

            modelBuilder.Entity("server.Models.RecContacto", b =>
                {
                    b.Navigation("CompraOrden");

                    b.Navigation("ContactoBancoRel");

                    b.Navigation("ContactoCategoriaRel");

                    b.Navigation("RecEmpresa");

                    b.Navigation("RecUsuario");
                });

            modelBuilder.Entity("server.Models.RecContactoCategoria", b =>
                {
                    b.Navigation("ContactoCategoriaRel");
                });

            modelBuilder.Entity("server.Models.RecEmpresa", b =>
                {
                    b.Navigation("CompraOrden");

                    b.Navigation("ProdProductoBase");

                    b.Navigation("ProdTarifa");

                    b.Navigation("PvConfig");

                    b.Navigation("RecContacto");

                    b.Navigation("RecContactoBanco");

                    b.Navigation("VentaOrden");
                });

            modelBuilder.Entity("server.Models.RecGrupo", b =>
                {
                    b.Navigation("RecUsuarioGrupo");

                    b.Navigation("RiAccesoModelo");

                    b.Navigation("RiMenuGrupoRel");
                });

            modelBuilder.Entity("server.Models.RecMoneda", b =>
                {
                    b.Navigation("CompraOrden");

                    b.Navigation("CompraOrdenDetalle");

                    b.Navigation("ProdTarifa");

                    b.Navigation("ProdTarifaDetalle");

                    b.Navigation("PvCaja");

                    b.Navigation("PvEfectivo");

                    b.Navigation("RecContactoBanco");

                    b.Navigation("RecEmpresa");

                    b.Navigation("VentaOrden");

                    b.Navigation("VentaOrdenDetalle");
                });

            modelBuilder.Entity("server.Models.RecTipoUsuario", b =>
                {
                    b.Navigation("RecUsuario");
                });

            modelBuilder.Entity("server.Models.RecUsuario", b =>
                {
                    b.Navigation("RecUsuarioGrupo");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.Navigation("RiMenuGrupoRel");

                    b.Navigation("RiModelo");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.Navigation("RiAccesoModelo");
                });

            modelBuilder.Entity("server.Models.UmCategoria", b =>
                {
                    b.Navigation("UmUnidadMedida");
                });

            modelBuilder.Entity("server.Models.UmUnidadMedida", b =>
                {
                    b.Navigation("CompraOrdenDetalle");

                    b.Navigation("ProdProductoBase");

                    b.Navigation("VentaOrdenDetalle");
                });

            modelBuilder.Entity("server.Models.VentaOrden", b =>
                {
                    b.Navigation("VentaOrdenDetalle");
                });
#pragma warning restore 612, 618
        }
    }
}
