// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using server.Data;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20241005203529_oct5")]
    partial class oct5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("server.Models.Cartilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Antibioticos")
                        .HasColumnType("text");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaTomaMuestras")
                        .HasColumnType("date");

                    b.Property<int>("IdPaciente")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<int>("NumeroMuestra")
                        .HasColumnType("integer");

                    b.Property<bool?>("Transfucion")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdPaciente");

                    b.ToTable("Cartilla");
                });

            modelBuilder.Entity("server.Models.Centro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdMunicipio")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SeguimientoCasos")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdMunicipio");

                    b.ToTable("Centro");
                });

            modelBuilder.Entity("server.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ciudad");
                });

            modelBuilder.Entity("server.Models.Laboratorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Telefono")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Laboratorio");
                });

            modelBuilder.Entity("server.Models.Madre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ci")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DetalleDireccion")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Enfermedad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoEmergencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tratamiento")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("TratamientoHipertiroidismo")
                        .HasColumnType("boolean");

                    b.Property<bool>("TratamientoHiportiroidismo")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Madre");
                });

            modelBuilder.Entity("server.Models.ManejoCartilla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadEntrega")
                        .HasColumnType("integer");

                    b.Property<int?>("CantidadRecivida")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTarjetaFinal")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoTarjetaInicio")
                        .HasColumnType("integer");

                    b.Property<string>("EntregadoPor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCentro")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("RecibidoPor")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<string>("TipoManejo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCentro");

                    b.ToTable("ManejoCartilla");
                });

            modelBuilder.Entity("server.Models.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdProvincia")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdProvincia");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("server.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EdadGestacionalDia")
                        .HasColumnType("integer");

                    b.Property<int>("EdadGestacionalSemana")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<int>("IdMadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<bool>("NacimientoTermino")
                        .HasColumnType("boolean");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("PesoNacimiento")
                        .HasColumnType("double precision");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdMadre");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("server.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCiudad");

                    b.ToTable("Provincia");
                });

            modelBuilder.Entity("server.Models.PvConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int>("IdTipoTerminal")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int>("LimiteContactos")
                        .HasColumnType("integer");

                    b.Property<int>("LimiteProducto")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PvConfig");
                });

            modelBuilder.Entity("server.Models.RecContacto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion1")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Direccion2")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EsEmpresa")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("integer");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("integer");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int>("IdPais")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("IdentFiscal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Latitud")
                        .HasColumnType("integer");

                    b.Property<int>("Longitud")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreDespliegue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Numeracion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Profesion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PuestoTrabajo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SitioWeb")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoFijo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelefonoMovil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TipoContacto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecContacto");
                });

            modelBuilder.Entity("server.Models.RecContactoCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Color")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathPadre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecContactoCategoria");
                });

            modelBuilder.Entity("server.Models.RecContactoCategoriaRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCategContacto")
                        .HasColumnType("integer");

                    b.Property<int>("IdContacto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCategContacto");

                    b.HasIndex("IdContacto");

                    b.ToTable("RecContactoCategoriaRel");
                });

            modelBuilder.Entity("server.Models.RecGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecGrupo");
                });

            modelBuilder.Entity("server.Models.RecTipoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RecTipoUsuario");
                });

            modelBuilder.Entity("server.Models.RecUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("boolean");

                    b.Property<string>("CodigoBot")
                        .HasColumnType("text");

                    b.Property<string>("CodigoSecreto")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EstadoBot")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Firma")
                        .HasColumnType("text");

                    b.Property<int>("IdAccion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdContacto")
                        .HasColumnType("integer");

                    b.Property<int?>("IdTipoUsuario")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Notificacion")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdContacto");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("RecUsuario");
                });

            modelBuilder.Entity("server.Models.RecUsuarioGrupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdUsuario");

                    b.ToTable("RecUsuarioGrupo");
                });

            modelBuilder.Entity("server.Models.Red", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Red");
                });

            modelBuilder.Entity("server.Models.Resultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Envio")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaEntregado")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FechaResultado")
                        .HasColumnType("date");

                    b.Property<int>("IdCartilla")
                        .HasColumnType("integer");

                    b.Property<int>("IdLaboratorio")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<string>("ResultadoPaciente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorReferencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ValorResultado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdCartilla")
                        .IsUnique();

                    b.HasIndex("IdLaboratorio");

                    b.ToTable("Resultado");
                });

            modelBuilder.Entity("server.Models.RiAccesoModelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Crear")
                        .HasColumnType("boolean");

                    b.Property<bool>("Editar")
                        .HasColumnType("boolean");

                    b.Property<bool>("Eliminar")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("integer");

                    b.Property<int>("IdModelo")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<bool>("Ver")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdModelo");

                    b.ToTable("RiAccesoModelo");
                });

            modelBuilder.Entity("server.Models.RiCategoriaModulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Exclusivo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.Property<bool>("Visible")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("RiCategoriaModulo");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Accion")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PathIcono")
                        .HasColumnType("text");

                    b.Property<string>("PathPadre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Secuencia")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdPadre");

                    b.ToTable("RiMenu");
                });

            modelBuilder.Entity("server.Models.RiMenuGrupoRel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("integer");

                    b.Property<int>("IdMenu")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdGrupo");

                    b.HasIndex("IdMenu");

                    b.ToTable("RiMenuGrupoRel");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdMenu")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Secuencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IdMenu");

                    b.ToTable("RiModelo");
                });

            modelBuilder.Entity("server.Models.UmCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Agrupable")
                        .HasColumnType("boolean");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("IdUsrCreacion")
                        .HasColumnType("integer");

                    b.Property<int?>("IdUsrModificacion")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UmCategoria");
                });

            modelBuilder.Entity("server.Models.Cartilla", b =>
                {
                    b.HasOne("server.Models.Paciente", "Paciente")
                        .WithMany("Cartilla")
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("server.Models.Centro", b =>
                {
                    b.HasOne("server.Models.Municipio", "Municipio")
                        .WithMany("Centro")
                        .HasForeignKey("IdMunicipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("server.Models.Laboratorio", b =>
                {
                    b.HasOne("server.Models.Provincia", "Provincia")
                        .WithMany("Laboratorio")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("server.Models.Madre", b =>
                {
                    b.HasOne("server.Models.Provincia", "Provincia")
                        .WithMany("Madre")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("server.Models.ManejoCartilla", b =>
                {
                    b.HasOne("server.Models.Centro", "Centro")
                        .WithMany("ManejoCartilla")
                        .HasForeignKey("IdCentro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centro");
                });

            modelBuilder.Entity("server.Models.Municipio", b =>
                {
                    b.HasOne("server.Models.Provincia", "Provincia")
                        .WithMany("Municipio")
                        .HasForeignKey("IdProvincia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("server.Models.Paciente", b =>
                {
                    b.HasOne("server.Models.Madre", "Madre")
                        .WithMany("Paciente")
                        .HasForeignKey("IdMadre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Madre");
                });

            modelBuilder.Entity("server.Models.Provincia", b =>
                {
                    b.HasOne("server.Models.Ciudad", "Ciudad")
                        .WithMany("Provincia")
                        .HasForeignKey("IdCiudad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");
                });

            modelBuilder.Entity("server.Models.RecContactoCategoriaRel", b =>
                {
                    b.HasOne("server.Models.RecContactoCategoria", "ContactoCategoria")
                        .WithMany("ContactoCategoriaRel")
                        .HasForeignKey("IdCategContacto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RecContacto", "Contacto")
                        .WithMany("ContactoCategoriaRel")
                        .HasForeignKey("IdContacto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contacto");

                    b.Navigation("ContactoCategoria");
                });

            modelBuilder.Entity("server.Models.RecUsuario", b =>
                {
                    b.HasOne("server.Models.RecContacto", "Contacto")
                        .WithMany("RecUsuario")
                        .HasForeignKey("IdContacto");

                    b.HasOne("server.Models.RecTipoUsuario", "TipoUsuario")
                        .WithMany("RecUsuario")
                        .HasForeignKey("IdTipoUsuario");

                    b.Navigation("Contacto");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("server.Models.RecUsuarioGrupo", b =>
                {
                    b.HasOne("server.Models.RecGrupo", "Grupo")
                        .WithMany("RecUsuarioGrupo")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RecUsuario", "Usuario")
                        .WithMany("RecUsuarioGrupo")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("server.Models.Resultado", b =>
                {
                    b.HasOne("server.Models.Cartilla", "Cartilla")
                        .WithOne("Resultado")
                        .HasForeignKey("server.Models.Resultado", "IdCartilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.Laboratorio", "Laboratorio")
                        .WithMany("Resultado")
                        .HasForeignKey("IdLaboratorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartilla");

                    b.Navigation("Laboratorio");
                });

            modelBuilder.Entity("server.Models.RiAccesoModelo", b =>
                {
                    b.HasOne("server.Models.RecGrupo", "Grupo")
                        .WithMany("RiAccesoModelo")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RiModelo", "Modelo")
                        .WithMany("RiAccesoModelo")
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.HasOne("server.Models.RiMenu", "Padre")
                        .WithMany()
                        .HasForeignKey("IdPadre");

                    b.Navigation("Padre");
                });

            modelBuilder.Entity("server.Models.RiMenuGrupoRel", b =>
                {
                    b.HasOne("server.Models.RecGrupo", "Grupo")
                        .WithMany("RiMenuGrupoRel")
                        .HasForeignKey("IdGrupo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server.Models.RiMenu", "Menu")
                        .WithMany("RiMenuGrupoRel")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.HasOne("server.Models.RiMenu", "Menu")
                        .WithMany("RiModelo")
                        .HasForeignKey("IdMenu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("server.Models.Cartilla", b =>
                {
                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("server.Models.Centro", b =>
                {
                    b.Navigation("ManejoCartilla");
                });

            modelBuilder.Entity("server.Models.Ciudad", b =>
                {
                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("server.Models.Laboratorio", b =>
                {
                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("server.Models.Madre", b =>
                {
                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("server.Models.Municipio", b =>
                {
                    b.Navigation("Centro");
                });

            modelBuilder.Entity("server.Models.Paciente", b =>
                {
                    b.Navigation("Cartilla");
                });

            modelBuilder.Entity("server.Models.Provincia", b =>
                {
                    b.Navigation("Laboratorio");

                    b.Navigation("Madre");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("server.Models.RecContacto", b =>
                {
                    b.Navigation("ContactoCategoriaRel");

                    b.Navigation("RecUsuario");
                });

            modelBuilder.Entity("server.Models.RecContactoCategoria", b =>
                {
                    b.Navigation("ContactoCategoriaRel");
                });

            modelBuilder.Entity("server.Models.RecGrupo", b =>
                {
                    b.Navigation("RecUsuarioGrupo");

                    b.Navigation("RiAccesoModelo");

                    b.Navigation("RiMenuGrupoRel");
                });

            modelBuilder.Entity("server.Models.RecTipoUsuario", b =>
                {
                    b.Navigation("RecUsuario");
                });

            modelBuilder.Entity("server.Models.RecUsuario", b =>
                {
                    b.Navigation("RecUsuarioGrupo");
                });

            modelBuilder.Entity("server.Models.RiMenu", b =>
                {
                    b.Navigation("RiMenuGrupoRel");

                    b.Navigation("RiModelo");
                });

            modelBuilder.Entity("server.Models.RiModelo", b =>
                {
                    b.Navigation("RiAccesoModelo");
                });
#pragma warning restore 612, 618
        }
    }
}
